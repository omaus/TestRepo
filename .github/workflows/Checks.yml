# This is a basic workflow to help you get started with Actions

name: Checks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Restore local tools
        run: dotnet tool restore

      - name: Run testscript
        #run: dotnet fsi testScript.fsx
        run: |
          dotnet fsi unitTestScript.fsx
          dotnet fsi simpleParseScript.fsx

      - name: Git add & commit
        run: |
          #git config --local user.email "funny@fun.de"
          #git config --local user.name "TestRepo GitHub action"
          #git add .
          #git commit -m "Update Readme via GitHub action"
          git config --local user.email "x"
          git config --local user.name "Unit tests"
          git add .
          git commit -m "Apply unit tests"
      
      ## Run external tool
      #- name: Run external tool
      #  run: |
      #    $client = New-Object System.Net.WebClient
      #    $url = "https://seafile.rlp.net/f/0e68b477bcbe4ec3b757/?dl=1"
      #    $client.DownloadFile($url, ".\ExpectoPatronumDL.exe")
      #    ./ExpectoPatronumDL.exe

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          branch: UnitTestResult #ignore if your branch is master
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
